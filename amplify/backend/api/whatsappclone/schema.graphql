type User @model {
  id: ID!
  username: String!
  name: String!
  imageUri: String
  status: String
  chatRoomUsers: [ChatRoomUser] @connection(keyName:"byUser", fields: ["id"])
}

type ChatRoomUser @model
@key(name:"byUser", fields:["userID","updatedAt"],queryField:"chatRoomsByUser")
@key(name:"byChatRoom", fields:["chatRoomID","userID"])
{
  id: ID!
  userID: ID!
  chatRoomID: ID!
  updatedAt: AWSDateTime!
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}

type ChatRoom @model
@key(
  name:"byUpdatedAt", 
  fields:["id","updatedAt"])
{
  id: ID!
  chatRoomUser: [ChatRoomUser] @connection(keyName:"byChatRoom", fields: ["id"])
  messages: [Message] @connection(keyName:"byChatRoom", fields: ["id"])
  lastMessageID: ID
  lastMessage: Message @connection(fields: ["lastMessageID"])
  updatedAt: AWSDateTime!
}

type Message @model 
@key(
  name:"byChatRoom", 
  fields:["chatRoomID","createdAt"],
  queryField:"messagesByChatRoom")
{
  id: ID!
  message: String!
  createdAt: String!
  userID: ID!
  chatRoomID: ID!
  imageUri: String
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}